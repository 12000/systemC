#include "systemc.h"
#include "constants.h"
#include <ctime>
#ifndef RAM_H
#define RAM_H

class ram_mem: public sc_module {
public:
    sc_in<bool> en;
    sc_in<bool> rw;
    sc_in<bool> request;
    sc_in_clk clk;
    sc_in<sc_uint<ADDR_SIZE>> addr;
    sc_in <sc_int<DATA_SIZE>> data_in;

    sc_out<bool> ack;
    sc_out <sc_int<DATA_SIZE>> data_out;

public:
    sc_signal<sc_int<DATA_SIZE>> ram[MEM_SIZE];

public:
    void prc_memory();

    SC_HAS_PROCESS(ram_mem);
    ram_mem(sc_module_name name) : sc_module(name) {
        //init
        //sort
        /*
        ram[1] = 0x01000000;
        ram[2] = 1024; //start data addr
        ram[3] = 0x01000100;
        ram[4] = 100; //size array
        ram[5] = 0x01000200; //
        ram[6] = 98; //size array - 2
        ram[7] = 0x01000300;
        ram[8] = 0;
        ram[9] = 0x01000400;
        ram[10] = 0;
        ram[11] = 0x01010501;
        ram[12] = 0x02090500; //dec r5 (7)
        ram[13] = 0x02040503; //(8)
        ram[14] = 0x01000600;//(9)
        ram[15] = 0;
        ram[16] = 0x01010700; //(10)
        ram[17] = 0x02010706; //11
        ram[18] = 0x01010800; //12
        ram[19] = 0x02010806; //13
        ram[20] = 0x02080800; //14
        ram[21] = 0x01040907; //15
        ram[22] = 0x01040A08; //16
        ram[23] = 0x0301090A; //17
        ram[24] = 0x04030000; //18
        ram[25] = 32;
        ram[26] = 0x02080600; //19
        ram[27] = 0x03020605; //20
        ram[28] = 0x04050000; //21
        ram[29] = 40;
        ram[30] = 0x04000000; //22
        ram[31] = 16;
        ram[32] = 0x01030700; //23
        ram[33] = 0x05000A07; //24
        ram[34] = 0x01030800; //25
        ram[35] = 0x05000908; //26
        ram[36] = 0x01000400; //27
        ram[37] = 1;
        ram[38] = 0x04000000; //28
        ram[39] = 26;
        ram[40] = 0x03000400; //29
        ram[41] = 0x04010000; //30
        ram[42] = 49;
        ram[43] = 0x02080300; //31
        ram[44] = 0x03020302; //32
        ram[45] = 0x04050000; //33
        ram[46] = 49;
        ram[47] = 0x04000000; //34
        ram[48] = 9;
        ram[49] = 0x01030500; // OUT R5
        ram[50] = 0x01051C00; //IN R28
        ram[51] = 0x06000000;

        srand( time(0) );
        for(uint i = 1024; i<2048; ++i){
            ram[i] = rand() %1024;
        }
        */

        //matrix test init

        ram[1] = 0x01000000;
        ram[2] = 6; //n
        ram[3] = 0x01000100;
        ram[4] = 4; //m
        ram[5] = 0x01000200; //
        ram[6] = 5; //p
        ram[7] = 0x01000300;
        ram[8] = 600; //addr A
        ram[9] = 0x01000400;
        ram[10] = 700; //addr B
        ram[11] = 0x01000500;
        ram[12] = 800; //addr Q
        ram[13] = 0x01010603; //(7)
        ram[14] = 0x01010704;//
        ram[15] = 0x01010805;
        ram[16] = 0x01010900; //()
        ram[17] = 0x00000000;//0x0201091F;
        ram[18] = 0x01010A02; //11
        ram[19] = 0x00000000;//0x02010A1F;//0x02090A00; //
        ram[20] = 0x01010B01; //
        ram[21] = 0x00000000;//0x02010B1F;//0x02090B00; //
        ram[22] = 0x01000C00; //
        ram[23] = 0; //
        ram[24] = 0x01000D00; //
        ram[25] = 0;
        ram[26] = 0x01000E00; //
        ram[27] = 0; //
        ram[28] = 0x01010805; //
        ram[29] = 0x01010F0C;
        ram[30] = 0x01011002; //
        ram[31] = 0x020A0F10;
        ram[32] = 0x0201080F; //
        ram[33] = 0x0201080D; //
        ram[34] = 0x01041108; //
        ram[35] = 0x01010603; //
        ram[36] = 0x01010F0C; //
        ram[37] = 0x01011001;
        ram[38] = 0x020A0F10; //
        ram[39] = 0x0201060F;
        ram[40] = 0x0201060E; //
        ram[41] = 0x01041206; //
        ram[42] = 0x01010704;
        ram[43] = 0x01010F0E; //
        ram[44] = 0x01011002; //
        ram[45] = 0x020A0F10; //
        ram[46] = 0x0201070F;
        ram[47] = 0x0201070D; //
        ram[48] = 0x01041307;
        ram[49] = 0x020A1213;
        ram[50] = 0x02011112;
        ram[51] = 0x01030800;
        ram[52] = 0x05001108;
        ram[53] = 0x02080E00;
        ram[54] = 0x03020E0B;
        ram[55] = 0x04050000;
        ram[56] = 59;
        ram[57] = 0x04000000;
        ram[58] = 28;
        ram[59] = 0x02080D00;
        ram[60] = 0x03020D0A;
        ram[61] = 0x04050000;
        ram[62] = 65;
        ram[63] = 0x04000000;
        ram[64] = 26;
        ram[65] = 0x02080C00;
        ram[66] = 0x03020C09;
        ram[67] = 0x04050000;
        ram[68] = 71;
        ram[69] = 0x04000000;
        ram[70] = 24;
        ram[71] = 0x06000000;

        //A

        ram[600] = 2;
        ram[601] = 4;
        ram[602] = 5;
        ram[603] = 6;
        ram[604] = 3;
        ram[605] = 1;

        srand(time(0));
        for(int i=0; i<6; ++i){
            for(int j=0; j<4; ++j){
                ram[600+i*4+j] = rand()%10;
            }
        }

        //B

        ram[700] = 4;
        ram[701] = 7;
        ram[702] = 0;
        ram[703] = 9;
        ram[704] = 3;
        ram[705] = 2;
        ram[706] = 5;
        ram[707] = 10;
        ram[708] = 6;

        for(int i=0; i<4; ++i){
            for(int j=0; j<5; ++j){
                ram[700+i*5+j] = rand()%10;
            }
        }

        //Q

        ram[800] = 0;
        ram[801] = 0;
        ram[802] = 0;
        ram[803] = 0;
        ram[804] = 0;
        ram[805] = 0;

        for(int i=0; i<6; ++i){
            for(int j=0; j<5; ++j){
                ram[800+i*5+j] = 0;
            }
        }


        //median filter
        /*
        ram[1] = 0x01000000; //1
        ram[2] = 16;
        ram[3] = 0x01000100; //2
        ram[4] = 16;
        ram[5] = 0x01000200; //3
        ram[6] = 1;
        ram[7] = 0x01000300; //4
        ram[8] = 1;
        ram[9] = 0x01001E00; //5
        ram[10] = 3;
        ram[11] = 0x01001F00; //6
        ram[12] = 3;
        ram[13] = 0x01000400; //7
        ram[14] = 400;
        ram[15] = 0x01000500; //8
        ram[16] = 700;
        ram[17] = 0x01000600; //9
        ram[18] = 800;
        ram[19] = 0x01010702; //10
        ram[20] = 0x01010803; //11 cycle 2

        ram[21] = 0x01000900; //12 cycle 3
        ram[22] = 0;
        ram[23] = 0x01000A00; //13 cycle 4
        ram[24] = 0;
        //cycle body
        ram[25] = 0x01010B09; //14
        ram[26] = 0x020A0B1F; //15
        ram[27] = 0x02010B0A; //16
        ram[28] = 0x02010B05; //17
        ram[29] = 0x01010C07; //18
        ram[30] = 0x02010C09; //19
        ram[31] = 0x02040C02; //20
        ram[32] = 0x020A0C01; //21
        ram[33] = 0x02010C08; //22
        ram[34] = 0x02010c0a; //23
        ram[35] = 0x02040c03; //24
        ram[36] = 0x02010c04; //25
        ram[37] = 0x01040d0c; //26
        ram[38] = 0x01030b00; //27
        ram[39] = 0x05000d0b; //28
        ram[40] = 0x02080a00; //29
        ram[41] = 0x03020a1f; //30
        ram[42] = 0x04050000; //31
        ram[43] = 46;
        ram[44] = 0x04000000; //32
        ram[45] = 25;
        ram[46] = 0x02080900; //33
        ram[47] = 0x0302091e; //34
        ram[48] = 0x04050000; //35
        ram[49] = 52;
        ram[50] = 0x04000000; //36
        ram[51] = 23;
        ram[52] = 0x04000000; //37 jmp to sort
        ram[53] = 100;
        ram[54] = 0x01010e07; //38
        ram[55] = 0x020a0e01; //39
        ram[56] = 0x02010e08; //40
        ram[57] = 0x02010e06; //41
        ram[58] = 0x01010f02; //42
        ram[59] = 0x020a0f1f; //43
        ram[60] = 0x02010f03; //44
        ram[61] = 0x02010f05; //45
        ram[62] = 0x0104100f; //46
        ram[63] = 0x01030e00; //47
        ram[64] = 0x0500100e; //48
        //--------------------------------

        ram[65] = 0x02080800; //49
        ram[66] = 0x01011101; //50
        ram[67] = 0x02041103; //51
        ram[68] = 0x03020811; //52
        ram[69] = 0x04050000; //53
        ram[70] = 73;
        ram[71] = 0x04000000; //54
        ram[72] = 21;

        ram[73] = 0x02080700; //55
        ram[74] = 0x01011200; //56
        ram[75] = 0x02041202; //57
        ram[76] = 0x03020712; //58
        ram[77] = 0x04050000; //59
        ram[78] = 81;
        ram[79] = 0x04000000; //60
        ram[80] = 20;
        ram[81] = 0x06000000; //61 - stop


        //sort
        ram[100] = 0x01011305; //100
        ram[101] = 0x0101141e; //101
        ram[102] = 0x020a141f; //102
        ram[103] = 0x01011514; //103
        ram[104] = 0x02051500; //104
        ram[105] = 2;
        ram[106] = 0x01001600; //105
        ram[107] = 0;
        ram[108] = 0x01001700; //106
        ram[109] = 0;

        ram[110] = 0x01011814; //107
        ram[111] = 0x02091800; //108
        ram[112] = 0x02041816; //109
        ram[113] = 0x01001900; //110
        ram[114] = 0;
        ram[115] = 0x01011a13; //111
        ram[116] = 0x02011a19; //112
        ram[117] = 0x01011b13; //113
        ram[118] = 0x02011b19; //114
        ram[119] = 0x02081b00; //115

        ram[120] = 0x01041c1a; //116
        ram[121] = 0x01041d1b; //117
        ram[122] = 0x03011c1d; //118
        ram[123] = 0x04030000; //119
        ram[124] = 131;
        ram[125] = 0x02081900; //120
        ram[126] = 0x03021918; //121
        ram[127] = 0x04050000; //122
        ram[128] = 139;
        ram[129] = 0x04000000; //123

        ram[130] = 115;
        ram[131] = 0x01031a00; //124
        ram[132] = 0x05001d00; //125
        ram[133] = 0x01031b00; //126
        ram[134] = 0x05001c00; //127
        ram[135] = 0x01001700; //128
        ram[136] = 1;
        ram[137] = 0x04000000; //129
        ram[138] = 125;
        ram[139] = 0x03001700; //130

        ram[140] = 0x04010000; //131
        ram[141] = 148;
        ram[142] = 0x02081600; //132
        ram[143] = 0x03021615; //133
        ram[144] = 0x04050000; //134
        ram[145] = 148;
        ram[146] = 0x04000000; //135
        ram[147] = 108;
        ram[148] = 0x04000000; //136 to main
        ram[149] = 54;

        srand( time(0) );
        for(uint i = 400; i<656; ++i){
            ram[i] = rand() %255;
        }

        for(uint i = 700; i<716; ++i){
            ram[i] = 0;
        }

        for(uint i = 800; i<1056; ++i){
            ram[i] = 0;
        }
        */

        SC_CTHREAD(prc_memory, clk.pos());
    }
};
#endif // RAM_H
